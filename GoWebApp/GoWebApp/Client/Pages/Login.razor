@page "/login" 
@inject Blazored.LocalStorage.ILocalStorageService _localStorage
@inject AuthenticationStateProvider _authStateProvider
@inject GoWebApp.Client.Services.IAuthService _authService
@inject IToastService _toastService

<h3>Log in or <NavLink href="register">register</NavLink></h3>

<div class="box-login">
    <EditForm Model="@user" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label for="username">Username</label>
            <InputText id="email" @bind-Value="user.Email" class="form-control" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <InputText id="password" @bind-Value="user.Password" type="password" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary">Login</button>
        <ValidationSummary />
    </EditForm>
</div>


@code {
    private ProfileLogIn user = new ProfileLogIn();

    private async void HandleLogin()
    {
        var result = await _authService.Login(user);
        if(result.Success)
        {
            await _localStorage.SetItemAsync<string>("authToken", result.Data);
            await _authStateProvider.GetAuthenticationStateAsync();
        }
        else
        {
            _toastService.ShowError(result.Message);
        }

    }
}
