@page "/login" 
@inject Blazored.LocalStorage.ILocalStorageService _localStorage
@inject AuthenticationStateProvider _authStateProvider
@inject GoWebApp.Client.Services.IAuthService _authService
@inject IToastService _toastService

Log in or <NavLink href="register">register</NavLink>

<EditForm Model="@user" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <p>
        <label>
            Username
        </label>
        <div>
            <InputText id="email" @bind-Value="user.Email"></InputText>
        </div>
    </p>
    <p>
        <label>
            Password
        </label>
        <div>
            <InputText id="password" @bind-Value="user.Password"></InputText>
        </div>
    </p>
    <button type="submit" class="btn">Login</button>
    <ValidationSummary></ValidationSummary>
</EditForm>
@code {
    private ProfileLogIn user = new ProfileLogIn();

    private async void HandleLogin()
    {
        var result = await _authService.Login(user);
        if(result.Success)
        {
            await _localStorage.SetItemAsync<bool>("isAuthenticated", true);
            await _authStateProvider.GetAuthenticationStateAsync();
        }
        else
        {
            _toastService.ShowError(result.Message);
        }

    }
}
